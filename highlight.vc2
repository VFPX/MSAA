*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="highlight.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS cborder AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	AlwaysOnTop = .T.
	BackColor = 255,255,128
	BorderStyle = 0
	Caption = "frmHilite"
	DoCreate = .T.
	Height = 72
	Left = 0
	Name = "cborder"
	ShowInTaskBar = .F.
	ShowWindow = 2
	TitleBar = 0
	Top = 0
	Visible = .F.
	Width = 336

ENDDEFINE

DEFINE CLASS chighlight AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: highlight		&& Highlights a specific region on the screen
		*p: nheight
		*p: nwidth
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	BackColor = 255,255,128
	BorderStyle = 0
	Caption = "Form2"
	DoCreate = .T.
	Height = 103
	Left = 0
	Name = "chighlight"
	nheight = 50
	nwidth = 50
	ShowInTaskBar = .F.
	ShowWindow = 2
	TitleBar = 0
	Top = 0
	Visible = .F.
	Width = 247
	
	PROCEDURE highlight		&& Highlights a specific region on the screen
		SetWindowLong(ThisForm.HWnd, -20, 0x00080000)
		SetLayeredWindowAttributes(ThisForm.HWnd, 0, 120, 2)
		
		*-- Create a region so that we can ditch the titlebar with SetWindowRgn
		hRegion = CreateRectRgn(10, 20, This.nWidth, This.nHeight)
		SetWindowRgn(ThisForm.hWnd, hRegion, 1)
	ENDPROC

	PROCEDURE Init
		*-- Declares that we'll need later
		DECLARE integer CreateRectRgn in gdi32 integer x1 , integer y1 , integer x2 , integer y2
		DECLARE integer SetWindowRgn in user32 integer hwnd, integer hRegion , integer bRedraw
		DECLARE SetWindowLong In Win32Api Integer, Integer, Integer
		DECLARE SetLayeredWindowAttributes In Win32Api Integer, String, Integer, Integer
		DECLARE GetWindowLong In Win32Api Integer, Integer
	ENDPROC

ENDDEFINE

DEFINE CLASS chighlighter AS custom 
 	*< CLASSDATA: Baseclass="custom" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: highlight		&& Specifies if the cell with the focus in the Grid control appears selected.
		*p: nborderwidth
		*p: nheight
		*p: nleft
		*p: ntop
		*p: nwidth
		*p: obottom
		*p: oleft
		*p: oright
		*p: otop
	*</DefinedPropArrayMethod>

	Name = "chighlighter"
	nborderwidth = 3
	nheight = 0
	nleft = 0
	ntop = 0
	nwidth = 0
	
	PROCEDURE highlight		&& Specifies if the cell with the focus in the Grid control appears selected.
		LPARAMETERS nTimeout
		
		LOCAL lnTimeout,lnSecs,lWasVisible
		
		lnTimeout = IIF(VARTYPE(nTimeout)#"N" OR nTimeout<0,1,nTimeout)
		lWasVisible=.T.
		
		IF VARTYPE(THIS.oLeft)#"O"
			lWasVisible = .F.
			THIS.oLeft = NEWOBJECT("cBorder","highlight.vcx")
			THIS.oTop = NEWOBJECT("cBorder","highlight.vcx")
			THIS.oRight = NEWOBJECT("cBorder","highlight.vcx")
			THIS.oBottom = NEWOBJECT("cBorder","highlight.vcx")
		ELSE
			THIS.oLeft.Visible = .F.
			THIS.oTop.Visible = .F.
			THIS.oRight.Visible = .F.
			THIS.oBottom.Visible = .F.
		ENDIF
		
		WITH THIS.oLeft
			.Top = This.ntop
			.Height = This.nHeight
			.Left = This.nLeft
			.Width = This.nborderwidth
		ENDWITH
		
		WITH THIS.oTop
			.Top = This.ntop
			.Height = This.nborderwidth
			.Left = This.nLeft
			.Width = This.nwidth 
		ENDWITH
		
		WITH THIS.oRight
			.Top = This.nTop
			.Height = This.nHeight
			.Left = This.nleft + This.nwidth - This.nborderwidth 
			.Width = This.nborderwidth 
		ENDWITH
		
		WITH THIS.oBottom
			.Top = This.ntop + This.nheight - This.nborderwidth 
			.Height = This.nborderwidth 
			.Left = This.nleft 
			.Width = This.nwidth
		ENDWITH
		
		IF !lWasVisible
			THIS.oLeft.TitleBar = 1
			THIS.oLeft.TitleBar = 0
			THIS.oTop.TitleBar = 1
			THIS.oTop.TitleBar = 0
			THIS.oRight.TitleBar = 1
			THIS.oRight.TitleBar = 0
			THIS.oBottom.TitleBar = 1
			THIS.oBottom.TitleBar = 0
		ENDIF
		
		THIS.oLeft.Visible = .t.
		THIS.oTop.Visible = .t.
		THIS.oRight.Visible = .t.
		THIS.oBottom.Visible = .t.
		
		lnSecs = SECONDS()
		DO WHILE SECONDS()-m.lnSecs < nTimeout
		ENDDO
		
	ENDPROC

ENDDEFINE
